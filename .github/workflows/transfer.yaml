name: Download and Upload All Assets

on:
  workflow_dispatch:

jobs:
  download:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install necessary tools
      run: |
        sudo apt-get update 
        sudo apt-get install -y aria2 lsb-release curl

    - name: Download all assets from file-downloads release
      run: |
        gh release view file-downloads --json assets --jq '.assets[].url' > asset_urls.txt
        aria2c -x 16 -s 16 -i asset_urls.txt
    
    - name: List downloaded files
      run: ls -la

    - name: Upload files to mega-downloads with random names
      run: |
        shopt -s nullglob
        gh release create mega-downloads --title "mega-downloads" --notes "mega-downloads" || true
        for file in *; do
          if [[ -f "$file" ]]; then
            # Extract file extension
            extension="${file##*.}"
            # Generate a random file name
            random_name=$(uuidgen)
            # Combine the random name with the original file extension
            new_name="${random_name}.${extension}"

            # Check if the new name already exists in the GitHub release
            while gh release view mega-downloads --json assets --jq ".assets[].name" | grep -q "$new_name"; do
              random_name=$(uuidgen)
              new_name="${random_name}.${extension}"
            done

            # Check file size and split if larger than 2GB
            filesize=$(stat -c%s "$file")
            if [ "$filesize" -gt 2000000000 ]; then
              split -b 2000m "$file" "${new_name}.part_"
              for part in "${new_name}.part_"*; do
                # Ensure the correct file size and Content-Length are set
                part_size=$(stat -c%s "$part")
                part_new_name="${new_name}.${part##*.}"

                # Check if the part name already exists in the GitHub release
                while gh release view mega-downloads --json assets --jq ".assets[].name" | grep -q "$part_new_name"; do
                  random_name=$(uuidgen)
                  new_name="${random_name}.${extension}"
                  part_new_name="${new_name}.${part##*.}"
                done

                echo "Uploading $part ($part_size bytes) as $part_new_name"
                gh release upload "mega-downloads" "./$part" --clobber
              done
            else
              # Rename the file
              mv "$file" "$new_name"
              # Upload the file
              file_size=$(stat -c%s "$new_name")
              echo "Uploading $new_name ($file_size bytes)"
              gh release upload "mega-downloads" "./$new_name" --clobber
            fi
          fi
        done
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}

    - name: List files after processing
      run: ls -la
